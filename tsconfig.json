// 作用：tsconfig.json 是 typescript 的配置文件，用于配置 typescript 编译器的编译规则
// 使用ESNext模块规范，适用于大多数代码，特别是前端代码
{
  "compilerOptions": {
    // 编译后的代码规范 ESNext 为 es6 代码规范
    "target": "ESNext",
    // 模块规范 ESNext 为 es6 模块规范
    "module": "ESNext",
    // 模块解析策略, node 为 nodejs 解析策略
    "moduleResolution": "node",
    // 保留jsx
    "jsx": "preserve",
    // 严格模式， false为不开启
    "strict": false,
    // 允许导入 json 模块
    "resolveJsonModule": true,
    // 生成 sourceMap , 作用： 1.方便调试 2.方便定位错误
    "sourceMap": true,
    // 允许使用 es 模块语法
    "esModuleInterop": true,
    // 不允许隐式的 any 类型，false为允许
    "noImplicitAny": false,
    // 使用装饰器
    "experimentalDecorators": true,
    // 使用元数据
    "emitDecoratorMetadata": true,
    // 用于解析非相对模块名称的基目录
    "baseUrl": ".",
    // 编译过程中需要引入的库文件的列表
    "lib": [
      // es6 语法
      "esnext",
      // dom 语法
      "dom"
    ],
    // 类型提示
    "types": [
      "vite/client",
      "./src/preload",
      "unplugin-vue-define-options/macros-global"
    ],
    "paths": {
      "@render/*": [
        "src/render/*"
      ],
      "@main/*": [
        "src/main/*"
      ],
      "@common/*": [
        "src/common/*"
      ]
    },
    // 允许编译 js 文件
    "allowJs": true
  },
  "include": [
    "src/**/*.ts",
    "src/**/*.d.ts",
    "src/**/*.tsx",
    "src/**/*.vue"
  ]
}
